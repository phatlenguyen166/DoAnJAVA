package GUI;

import BUS.NhaCungCapBUS;
import BUS.PhieuNhapBUS;
import BUS.SanPhamBUS;
import DAO.NhaCungCapDAO;
import DAO.PhieuNhapDAO;
import DTO.NhanVienDTO;
import DTO.PhieuNhapDTO;
import DTO.SanPhamDTO;
import GUI.Component.LocTrongPhieuNhap;
import GUI.Main;
import GUI.PNhap.ChiTietPhieuNhap;
import GUI.Panel.TaoPhieuNhap;
import GUI.SPham.ChiTietSanPham;
import GUI.SPham.SuaSanPham;
import GUI.SPham.ThemSanPham;
import com.formdev.flatlaf.extras.FlatSVGIcon;
import java.awt.BorderLayout;
import java.awt.Color;
import static java.awt.Color.red;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.FlowLayout;
import java.awt.GridLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.ComponentEvent;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.awt.event.MouseEvent;
import java.io.IOException;
import java.text.DecimalFormat;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JComboBox;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTextField;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */

/**
 *
 * @author ADMIN
 */
public class PhieuNhap extends javax.swing.JPanel implements ActionListener{
    PhieuNhapBUS phieuNhapBUS = new PhieuNhapBUS();
    PhieuNhapDAO phieuNhapDAO = new PhieuNhapDAO();
    TaoPhieuNhap tpn = new TaoPhieuNhap();
    NhaCungCapDAO nhaCungCapDAO = new NhaCungCapDAO();
    ChiTietPhieuNhap chiTietPhieuNhap = new ChiTietPhieuNhap();
    LocTrongPhieuNhap locTrongPhieuNhap = new LocTrongPhieuNhap();
    private NhaCungCapBUS nhaCungCapBUS;
    private DefaultTableModel tblModel;
    private TaoPhieuNhap taoPhieuNhap; 
    private PhieuNhap phieuNhap;
    ArrayList<PhieuNhapDTO> selectedPNproducts;
    Main main;
    
    public PhieuNhap() {
    initComponents();
    addIcon();
    tblPhieuNhap.setFocusable(false);     
    tblPhieuNhap.setDefaultEditor(Object.class, null);
    tblPhieuNhap.getColumnModel().getColumn(1).setPreferredWidth(180);
    tblPhieuNhap.setFocusable(false);
    tblPhieuNhap.setAutoCreateRowSorter(true);
    taoPhieuNhap = new TaoPhieuNhap(); // Khởi tạo đối tượng TaoPhieuNhap
    nhaCungCapBUS = new NhaCungCapBUS();
    
    btnChiTietPN.addActionListener(this); // Đăng ký bộ lắng nghe cho nút btnChiTietPN
//    tblPhieuNhap.addActionListener(this);
    
    locTrongPhieuNhap.CBBNhaCungCap(comboboxNCC);
    
    // Khởi tạo tblModel
    tblModel = (DefaultTableModel) tblPhieuNhap.getModel();
    this.selectedPNproducts = phieuNhapBUS.getAllPhieuNhap();
    loadDataTalbe(this.selectedPNproducts);
//    tpn.updateInputTable(this.selectedPNproducts);

}   

    
    private void addIcon(){
            btnThemPN.setIcon(new FlatSVGIcon("./icon/add.svg"));
            btnChiTietPN.setIcon(new FlatSVGIcon("./icon/edit.svg"));
            btnHuyPhieu.setIcon(new FlatSVGIcon("./icon/cancel.svg"));
            btnXuatExcelPN.setIcon(new FlatSVGIcon("./icon/export_excel.svg"));

        }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSeparator1 = new javax.swing.JSeparator();
        mainContentPN = new javax.swing.JPanel();
        pnlTop = new javax.swing.JPanel();
        btnThemPN = new javax.swing.JButton();
        btnChiTietPN = new javax.swing.JButton();
        btnHuyPhieu = new javax.swing.JButton();
        btnXuatExcelPN = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        btnTimKiem = new javax.swing.JTextField();
        pnlBottom = new javax.swing.JPanel();
        scpnlshow = new javax.swing.JScrollPane();
        tblPhieuNhap = new javax.swing.JTable();
        pnlLoc = new javax.swing.JPanel();
        txtnhacungcap = new javax.swing.JLabel();
        comboboxNCC = new javax.swing.JComboBox<>();
        txtnhacungcap1 = new javax.swing.JLabel();
        txtnhacungcap2 = new javax.swing.JLabel();
        comboboxNCC2 = new javax.swing.JComboBox<>();
        txtnhacungcap3 = new javax.swing.JLabel();
        txtnhacungcap4 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        txtnhacungcap5 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        jDateChooser2 = new com.toedter.calendar.JDateChooser();

        setLayout(new java.awt.BorderLayout());

        mainContentPN.setPreferredSize(new java.awt.Dimension(1300, 800));
        mainContentPN.setLayout(new java.awt.BorderLayout());

        pnlTop.setBackground(new java.awt.Color(255, 255, 255));
        pnlTop.setPreferredSize(new java.awt.Dimension(1200, 70));

        btnThemPN.setText("Thêm");
        btnThemPN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemPNActionPerformed(evt);
            }
        });
        pnlTop.add(btnThemPN);

        btnChiTietPN.setText("Chi tiết");
        btnChiTietPN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnChiTietPNActionPerformed(evt);
            }
        });
        pnlTop.add(btnChiTietPN);

        btnHuyPhieu.setText("Hủy phiếu");
        btnHuyPhieu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHuyPhieuActionPerformed(evt);
            }
        });
        pnlTop.add(btnHuyPhieu);

        btnXuatExcelPN.setText("Xuất excel");
        btnXuatExcelPN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXuatExcelPNActionPerformed(evt);
            }
        });
        pnlTop.add(btnXuatExcelPN);

        jLabel1.setText("Tìm kiếm :");
        pnlTop.add(jLabel1);

        btnTimKiem.setPreferredSize(new java.awt.Dimension(200, 30));
        btnTimKiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTimKiemActionPerformed(evt);
            }
        });
        pnlTop.add(btnTimKiem);

        mainContentPN.add(pnlTop, java.awt.BorderLayout.NORTH);

        tblPhieuNhap.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "STT", "Mã phiếu nhập", "Nhà cung cấp", "Nhân viên nhập", "Thời gian", "Tổng tiền"
            }
        ));
        scpnlshow.setViewportView(tblPhieuNhap);

        pnlLoc.setBackground(new java.awt.Color(255, 255, 255));
        pnlLoc.setPreferredSize(new java.awt.Dimension(270, 700));

        txtnhacungcap.setText("Nhân viên nhập");

        comboboxNCC.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Tất cả" }));
        comboboxNCC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboboxNCCActionPerformed(evt);
            }
        });

        txtnhacungcap1.setText("Đến số tiền (VND)");

        txtnhacungcap2.setText("Từ ngày");

        comboboxNCC2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Tất cả" }));

        txtnhacungcap3.setText("Đến ngày");

        txtnhacungcap4.setText("Nhà cung cấp");

        txtnhacungcap5.setText("Từ số tiền (VND)");

        javax.swing.GroupLayout pnlLocLayout = new javax.swing.GroupLayout(pnlLoc);
        pnlLoc.setLayout(pnlLocLayout);
        pnlLocLayout.setHorizontalGroup(
            pnlLocLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlLocLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlLocLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jTextField2)
                    .addGroup(pnlLocLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(pnlLocLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jTextField1)
                            .addGroup(pnlLocLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(pnlLocLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(comboboxNCC, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txtnhacungcap, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtnhacungcap2, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtnhacungcap1, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(comboboxNCC2, javax.swing.GroupLayout.Alignment.TRAILING, 0, 248, Short.MAX_VALUE))
                                .addComponent(txtnhacungcap3, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addComponent(txtnhacungcap4, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtnhacungcap5, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jDateChooser1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jDateChooser2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(16, Short.MAX_VALUE))
        );
        pnlLocLayout.setVerticalGroup(
            pnlLocLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlLocLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtnhacungcap4, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(comboboxNCC, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35)
                .addComponent(txtnhacungcap, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(comboboxNCC2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35)
                .addComponent(txtnhacungcap2, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35)
                .addComponent(txtnhacungcap3, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jDateChooser2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35)
                .addComponent(txtnhacungcap5, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35)
                .addComponent(txtnhacungcap1, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(184, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout pnlBottomLayout = new javax.swing.GroupLayout(pnlBottom);
        pnlBottom.setLayout(pnlBottomLayout);
        pnlBottomLayout.setHorizontalGroup(
            pnlBottomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlBottomLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlLoc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(scpnlshow, javax.swing.GroupLayout.DEFAULT_SIZE, 860, Short.MAX_VALUE))
        );
        pnlBottomLayout.setVerticalGroup(
            pnlBottomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlBottomLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlBottomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnlLoc, javax.swing.GroupLayout.DEFAULT_SIZE, 731, Short.MAX_VALUE)
                    .addComponent(scpnlshow))
                .addContainerGap())
        );

        mainContentPN.add(pnlBottom, java.awt.BorderLayout.CENTER);

        add(mainContentPN, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void btnTimKiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTimKiemActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnTimKiemActionPerformed

    private void btnXuatExcelPNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXuatExcelPNActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnXuatExcelPNActionPerformed

    private void btnHuyPhieuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHuyPhieuActionPerformed
        int choice = JOptionPane.showConfirmDialog(null, "Bạn có chắc chắn muốn hủy phiếu nhập này?", "Xác nhận hủy", JOptionPane.YES_NO_OPTION);
        if (choice == JOptionPane.YES_OPTION) {
            DeletePhieuNhap();
        }
    }//GEN-LAST:event_btnHuyPhieuActionPerformed

    
    // Thêm bộ lắng nghe cho combobox
//    public void itemStateChanged(ItemEvent e) {
//        if (e.getStateChange() == ItemEvent.SELECTED) {
//            String selectedNcc = (String) comboboxNCC.getSelectedItem();
//            if (!selectedNcc.equals("Tất cả")) {
//                loadDataTalbe(phieuNhapBUS.filterNCC(selectedNcc)); // Lọc dữ liệu theo nhà cung cấp đã chọn
//            } else {
//                loadDataTalbe(phieuNhapBUS.getAllPhieuNhap()); // Hiển thị lại toàn bộ dữ liệu nếu chọn "Tất cả"
//            }
//        }
//    }
    
    //HÀM HỦY PHIẾU NHẬP
    public void DeletePhieuNhap(){
        taoPhieuNhap = new TaoPhieuNhap();
        
        int selectedRow = tblPhieuNhap.getSelectedRow();
        
        if (selectedRow != -1) {
            phieuNhapBUS = new PhieuNhapBUS(); // tạo mới cho thanhcong trong lệnh if này, nếu chỉ tạo 1 cái thì điều kiện xóa sẽ lỗi kết nối sql
            int maspColumnIndex = taoPhieuNhap.getColumnIndexByName("Mã phiếu nhập", tblPhieuNhap);
            int mapn = (int) tblPhieuNhap.getValueAt(selectedRow, maspColumnIndex);
            boolean thanhcong = phieuNhapBUS.DeletePhieuNhap(mapn);
            if(thanhcong){
                phieuNhapBUS = new PhieuNhapBUS();
                JOptionPane.showMessageDialog(null, "Xóa sản phẩm thành công");
                selectedPNproducts = phieuNhapBUS.getAllPhieuNhap();
                loadDataTalbe(selectedPNproducts);
            }else {
                JOptionPane.showMessageDialog(null, "Xóa sản phẩm lỗi");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Vui lòng chọn sản phảm để xóa");
        }
        }
        
    private void btnChiTietPNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnChiTietPNActionPerformed
        chiTietPhieuNhap = new ChiTietPhieuNhap();
        
    }//GEN-LAST:event_btnChiTietPNActionPerformed

    
    private void btnThemPNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemPNActionPerformed
        // Ẩn các thành phần hiện tại
        pnlBottom.setVisible(false);
        pnlLoc.setVisible(false);
        pnlTop.setVisible(false);
        // Tạo một thể hiện của panel từ file java khác
        TaoPhieuNhap taoPhieuNhap = new TaoPhieuNhap();
        // Thêm taoPhieuNhap vào mainContentPN
        mainContentPN.add(taoPhieuNhap);
        mainContentPN.revalidate();
        mainContentPN.repaint();

    }//GEN-LAST:event_btnThemPNActionPerformed

    private void comboboxNCCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboboxNCCActionPerformed
        String selectedNcc = (String) comboboxNCC.getSelectedItem();
        if (selectedNcc != null) { // Kiểm tra giá trị không null trước khi xử lý
            if (!selectedNcc.equals("Tất cả")) {
                System.out.println("list: " + phieuNhapBUS.filterNCC(selectedNcc));
                loadDataTalbe(phieuNhapBUS.filterNCC(selectedNcc));
            } else {
                loadDataTalbe(phieuNhapBUS.getAllPhieuNhap());
            }
        }
    }//GEN-LAST:event_comboboxNCCActionPerformed

//Hàm hiển thị mảng phiếu nhập
private void HienThiListPhieuNhap(ArrayList<PhieuNhapDTO> listPhieuNhap) {
    DefaultTableModel model = (DefaultTableModel) tblPhieuNhap.getModel();
    model.setRowCount(0);
    for (PhieuNhapDTO pn : listPhieuNhap) {
        Object[] row = {
            pn.getManhacungcap(),
            pn.getMaphieunhap(),
            pn.getMaNV(),
            pn.getThoigiantao(),
            pn.getTongTien() 
        };
        model.addRow(row);
    }

    // Tạo renderer để hiển thị nội dung ở giữa ô
    DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
    centerRenderer.setHorizontalAlignment(SwingConstants.CENTER);

    // Áp dụng renderer cho từng cột trong bảng
    for (int i = 0; i < tblPhieuNhap.getColumnCount(); i++) { // Sửa tblSanPham thành tblPhieuNhap
        tblPhieuNhap.getColumnModel().getColumn(i).setCellRenderer(centerRenderer);
    }
}
public void loadDataTalbe(ArrayList<PhieuNhapDTO> listphieunhap) {
    tblModel.setRowCount(0); // Xóa tất cả các hàng trong bảng
    int i = 1;
    for (PhieuNhapDTO pn : listphieunhap) {
        String TenNcc = nhaCungCapDAO.selectById(pn.getManhacungcap()).getTenncc();
        DecimalFormat decimalFormat = new DecimalFormat("#,### đ"); // Khởi tạo một đối tượng DecimalFormat
        Object[] rowData = {
            i++,
            pn.getMaphieunhap(),
            TenNcc,       
            pn.getMaNV(),          
            pn.getThoigiantao(),
            decimalFormat.format(pn.getTongTien())
        };
        tblModel.addRow(rowData); // Thêm hàng mới vào bảng
    }
    // Tạo renderer để căn giữa nội dung ở giữa ô
        DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
        centerRenderer.setHorizontalAlignment(SwingConstants.CENTER);

        // Áp dụng renderer cho từng cột trong bảng
        for (int j = 0; j < tblModel.getColumnCount(); j++) {
            tblPhieuNhap.getColumnModel().getColumn(j).setCellRenderer(centerRenderer);
        }
}        
        
    private PhieuNhapDTO selectPhieuNhap() {
    int selectedRow = tblPhieuNhap.getSelectedRow();
    PhieuNhapDTO result = null;
    if (selectedRow != -1) {
        //int mapnColumnIndex = taoPhieuNhap.getColumnIndexByName("Mã xuất phiếu", tblPhieuNhap); // Sử dụng đối tượng taoPhieuNhap để gọi phương thức getColumnIndexByName
        int mapn = (int) tblPhieuNhap.getValueAt(selectedRow, 1);
        phieuNhapBUS = new PhieuNhapBUS();
        result = phieuNhapBUS.selectByID(mapn);   
    }
    return result;
}


    @Override
    public void actionPerformed(ActionEvent e) {
    if (e.getSource() == btnChiTietPN) {
        if (selectPhieuNhap() != null) {
            //int mapn = selectedPhieuNhap.getMaphieunhap();
            // Sử dụng mã phiếu nhập mapn ở đây theo nhu cầu của bạn
            //JOptionPane.showMessageDialog(null, "Mã phiếu nhập: " + selectPhieuNhap().getMaphieunhap());
            chiTietPhieuNhap = new ChiTietPhieuNhap(selectPhieuNhap());
            chiTietPhieuNhap.setLocationRelativeTo(null);
            chiTietPhieuNhap.setVisible(true);
        } else {
            JOptionPane.showMessageDialog(null, "Vui lòng chọn sản phẩm");
//            System.out.println(selectPhieuNhap());
        }
    } 
//else if(e.getSource() == comboboxNCC){
//        if(!comboboxNCC.getSelectedItem().equals("Tất cả")){
//            phieuNhapBUS.filterNCC();
//        }
//    }
}
//    // Thêm bộ lắng nghe cho combobox
//            if (comboboxNCC.getSelectedItem().equals("Tất cả")) {
//                phieuNhapBUS.filterNCC();
//            } else {
//                // Hiển thị lại toàn bộ dữ liệu nếu chọn "Tất cả"
//                phieuNhap.loadDataTalbe(phieuNhapBUS.getAllPhieuNhap());
//            }


    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnChiTietPN;
    private javax.swing.JButton btnHuyPhieu;
    private javax.swing.JButton btnThemPN;
    private javax.swing.JTextField btnTimKiem;
    private javax.swing.JButton btnXuatExcelPN;
    public javax.swing.JComboBox<String> comboboxNCC;
    private javax.swing.JComboBox<String> comboboxNCC2;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private com.toedter.calendar.JDateChooser jDateChooser2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JPanel mainContentPN;
    private javax.swing.JPanel pnlBottom;
    private javax.swing.JPanel pnlLoc;
    private javax.swing.JPanel pnlTop;
    private javax.swing.JScrollPane scpnlshow;
    public javax.swing.JTable tblPhieuNhap;
    private javax.swing.JLabel txtnhacungcap;
    private javax.swing.JLabel txtnhacungcap1;
    private javax.swing.JLabel txtnhacungcap2;
    private javax.swing.JLabel txtnhacungcap3;
    private javax.swing.JLabel txtnhacungcap4;
    private javax.swing.JLabel txtnhacungcap5;
    // End of variables declaration//GEN-END:variables
}
